#
# Date: 8/21/20 (was 8/3/20)
# DeltaMaker printer config file: printer-deltamaker-2xt-einsy.cfg
# DeltaMaker 2XT config file for Einsy Rambo board.
#
# Features:
# 1. extruder fan
# 2. power controlled touch probe
# 3. mesh bed leveling using touch probe
# 4. halo tool changer

# Include gcode_macros that provide DeltaMaker specific commands
[include printer-deltamaker-gcode-macros.cfg]

# Include macros for Halo Tool Changer
[include printer-deltamaker-tc-macros.cfg]

# Configure Halo Tool Dock with 3 swappable tools; T0, T1, and T2
#
# Towers A,B,C
# Tool Bars: 1, 2, 3 
#              C
#            /   \
# (left) 2 /       \ 1 (right)
#        /           \
#      A - - - - - - - B
#          3 (front)
#  
# Initialize tool T0 on front tool bar
[gcode_macro TC_T0]
variable_status: 2
variable_tool_bar: 3
variable_safe_x: 0.0
variable_safe_y: -70.0
variable_dock_x: 17.0
variable_dock_y: -105.0
variable_pick_x: 1.0
variable_pick_y: -139.0
variable_bar_z: 270.0
variable_below_z: 220.0
gcode:
   M118 TC_T0: status={status} bar={tool_bar} safe=({safe_x},{safe_y}) dock=({dock_x},{dock_y} pick=({pick_x},{pick_y}) z={bar_z}
   SET_TC_STATE
   {% if status == 1 %}
     G1 X0 Y0 Z{bar_z}
     G1 X{safe_x} Y{safe_y}
     G1 X{dock_x} Y{dock_y}
   {% elif status == 2 %}
     G1 X0 Y0 Z{below_z}
     G1 X{safe_x} Y{safe_y}
     G1 X{pick_x} Y{pick_y}
   {% endif %}
   RESTORE_STATE

# Initialize tool T1 on right tool bar
[gcode_macro TC_T1]
variable_status: 2
variable_tool_bar: 1
variable_safe_x: 60.6
variable_safe_y: 40.0
variable_dock_x: 81.5
variable_dock_y: 67.5
variable_pick_x: 117.9
variable_pick_y: 70.6
variable_bar_z: 270.0
variable_below_z: 220.0
gcode:
   M118 TC_T1: status={status} bar={tool_bar} safe=({safe_x},{safe_y}) dock=({dock_x},{dock_y} pick=({pick_x},{pick_y}) z={bar_z}
   SET_TC_STATE
   {% if status == 1 %}
     G1 X0 Y0 Z{bar_z}
     G1 X{safe_x} Y{safe_y}
     G1 X{dock_x} Y{dock_y}
   {% elif status == 2 %}
     G1 X0 Y0 Z{below_z}
     G1 X{safe_x} Y{safe_y}
     G1 X{pick_x} Y{pick_y}
   {% endif %}
   RESTORE_STATE

# Initialize tool T2 on left tool bar
[gcode_macro TC_T2]
variable_status: 1
variable_tool_bar: 2
variable_safe_x: -60.6
variable_safe_y: 34.9
variable_dock_x: -96.5
variable_dock_y: 39.8
variable_pick_x: -117.9
variable_pick_y: 67.7
variable_bar_z: 270.0
variable_below_z: 220.0
gcode:
   M118 TC_T2: status={status} bar={tool_bar} safe=({safe_x},{safe_y}) dock=({dock_x},{dock_y} pick=({pick_x},{pick_y}) z={bar_z}
   SET_TC_STATE
   {% if status == 1 %}
     G1 X0 Y0 Z{bar_z}
     G1 X{safe_x} Y{safe_y}
     G1 X{dock_x} Y{dock_y}
   {% elif status == 2 %}
     G1 X0 Y0 Z{below_z}
     G1 X{safe_x} Y{safe_y}
     G1 X{pick_x} Y{pick_y}
   {% endif %}
   RESTORE_STATE

[gcode_macro INIT_TOOL_OFFSET]
gcode:
   G1 F10000
   SET_GCODE_OFFSET X=0 Y=0 Z=0.35
   SAVE_GCODE_STATE NAME=tool_offset_T0
   SET_GCODE_OFFSET X=-0.2 Y=0 Z=0.25
   SAVE_GCODE_STATE NAME=tool_offset_T1
   SET_GCODE_OFFSET X=-0.175 Y=-0.77 Z=0.25
   SAVE_GCODE_STATE NAME=tool_offset_T2

[gcode_macro START_DEMO]
gcode:
   SET_GCODE_VARIABLE MACRO=ROTATE_TOOL VARIABLE=phase VALUE=1
   UPDATE_DELAYED_GCODE ID=DEMO_LOOP DURATION=1
[gcode_macro STOP_DEMO]
gcode:
   SET_GCODE_VARIABLE MACRO=ROTATE_TOOL VARIABLE=phase VALUE=0
   UPDATE_DELAYED_GCODE ID=DEMO_LOOP DURATION=0

[delayed_gcode DEMO_LOOP]
initial_duration: 0
gcode:
   ROTATE_TOOL
   UPDATE_DELAYED_GCODE ID=DEMO_LOOP DURATION=1

[gcode_macro ROTATE_TOOL]
variable_phase: 0
gcode:
   SET_GCODE_VARIABLE MACRO=ROTATE_TOOL VARIABLE=phase VALUE={phase|int + 1}
   M118 ROTATE_TOOL: phase={phase}
   {% if phase == 1 %}
      PICK_T0
   {% elif phase == 2 %}
      DOCK_T2
   {% elif phase == 3 %}
      PICK_T1
   {% elif phase == 4 %}
      DOCK_T0
   {% elif phase == 5 %}
      PICK_T2
   {% elif phase == 6 %}
      DOCK_T1
   {% else %}
      SET_GCODE_VARIABLE MACRO=ROTATE_TOOL VARIABLE=phase VALUE=1
   {% endif %}

# start with tools docked at T1 and T2
[gcode_macro TOOL_CHANGE_DEMO]
gcode:
   G28
   G1 Z10 F5000
   T1
   T2
   T0

#######################

[gcode_macro LIFT_NOZZLE]
gcode:
   {% if printer["gcode_macro HOMING_OVERRIDE"].must_center > 0 %}
      M118 LIFT_NOZZLE
      G91
      G1 Z25 F20000
      G1 Z-5 F1000
      G90
   {% endif %}

[gcode_macro T0]
gcode:
   LIFT_NOZZLE
   {% if printer.toolhead.extruder == "extruder" %}
      SAVE_GCODE_STATE NAME=tool_offset_T0
   {% elif printer.toolhead.extruder == "extruder1"%}
      SAVE_GCODE_STATE NAME=tool_offset_T1
      DOCK_T1
      PICK_T0
   {% elif printer.toolhead.extruder == "extruder2"%}
      SAVE_GCODE_STATE NAME=tool_offset_T2
      DOCK_T2
      PICK_T0
   {% endif %}
   RESTORE_GCODE_STATE NAME=tool_offset_T0 MOVE=1 MOVE_SPEED=10000
   ACTIVATE_EXTRUDER EXTRUDER=extruder
 
[gcode_macro T1]
gcode:
   LIFT_NOZZLE
   {% if printer.toolhead.extruder == "extruder" %}
      SAVE_GCODE_STATE NAME=tool_offset_T0
      DOCK_T0
      PICK_T1
   {% elif printer.toolhead.extruder == "extruder1"%}
      SAVE_GCODE_STATE NAME=tool_offset_T1
   {% elif printer.toolhead.extruder == "extruder2"%}
      SAVE_GCODE_STATE NAME=tool_offset_T2
      DOCK_T2
      PICK_T1
   {% endif %}   
   RESTORE_GCODE_STATE NAME=tool_offset_T1 MOVE=1 MOVE_SPEED=10000
   ACTIVATE_EXTRUDER EXTRUDER=extruder1

[gcode_macro T2]
gcode:
   LIFT_NOZZLE
   {% if printer.toolhead.extruder == "extruder" %}
      SAVE_GCODE_STATE NAME=tool_offset_T0
      DOCK_T0
      PICK_T2
   {% elif printer.toolhead.extruder == "extruder1"%}
      SAVE_GCODE_STATE NAME=tool_offset_T1
      DOCK_T1
      PICK_T2
   {% elif printer.toolhead.extruder == "extruder2"%}
      SAVE_GCODE_STATE NAME=tool_offset_T2
   {% endif %}   
   RESTORE_GCODE_STATE NAME=tool_offset_T2 MOVE=1 MOVE_SPEED=10000
   ACTIVATE_EXTRUDER EXTRUDER=extruder2

#######################

# Enable the SAVE_GCODE_OFFSET command
[save_gcode_offset]

# Servos (one may define any number of sections with a "servo"
# prefix). The servos may be controlled using the SET_SERVO g-code
# command. For example: SET_SERVO SERVO=my_servo ANGLE=180
[servo extruder_select]
# T0: extruder_select angle=180
# T1: extruder_select angle=30
pin: ar5
#pin: ar10
#maximum_servo_angle: 180
#minimum_pulse_width: 0.001
#maximum_pulse_width: 0.002
initial_angle: 70
#initial_pulse_width: 0.0015
enable: True
#   Enable or disable servo. It can be enabled or disabled later using
#   SET_SERVO SERVO=my_servo ENABLE=<0|1> g-command.
#   The default is True (=enabled)

[output_pin probe_power_pin]
pin: PH5
value: 0
shutdown_value: 0
[output_pin aux_probe_power_pin]
#pin: auxboard:PH5
pin: PH3
value: 1
shutdown_value: 0

[gcode_macro PROBE_POWER_ON]
gcode:
   SET_PIN PIN=probe_power_pin VALUE=1
   SET_PIN PIN=aux_probe_power_pin VALUE=1
   G4 P100
[gcode_macro PROBE_POWER_OFF]
gcode:
   SET_PIN PIN=probe_power_pin VALUE=0
   SET_PIN PIN=aux_probe_power_pin VALUE=0

[probe]
pin: PE7
#pin: PE6
#x_offset: -16.0
#y_offset: -22.0
#z_offset: -0.2
#speed: 10.0
speed: 4
lift_speed: 10.0
samples: 2
#sample_retract_dist: 2.0
#samples_result: average
#samples_tolerance: 0.100
samples_tolerance_retries: 5
activate_gcode:
    PROBE_POWER_ON
deactivate_gcode:
    ; PROBE_POWER_OFF


# Mesh Bed Leveling. One may define a [bed_mesh] config section
# to enable move transformations that offset the z axis based
# on a mesh generated from probed points.
[bed_mesh]
speed: 250
horizontal_move_z: 5
mesh_radius: 100
#round_probe_count: 7
#relative_reference_index: 14
round_probe_count: 5
relative_reference_index: 6
#round_probe_count: 3
#relative_reference_index: 2
#mesh_origin: -8, -11
fade_start: 1.0
fade_end: 10.0
split_delta_z: .025
#   The amount of Z difference (in mm) along a move that will
#   trigger a split. Default is .025.
move_check_distance: 5.0
#   The distance (in mm) along a move to check for split_delta_z.
#   This is also the minimum length that a move can be split. Default
#   is 5.0.
mesh_pps: 2,2
#   A comma separated pair of integers (X,Y) defining the number of
#   points per segment to interpolate in the mesh along each axis. A
#   "segment" can be defined as the space between each probed
#   point. The user may enter a single value which will be applied
#   to both axes.  Default is 2,2.
algorithm: bicubic
#   The interpolation algorithm to use. May be either "lagrange"
#   or "bicubic". This option will not affect 3x3 grids, which
#   are forced to use lagrange sampling.  Default is lagrange.
#bicubic_tension: .2
#   When using the bicubic algorithm the tension parameter above
#   may be applied to change the amount of slope interpolated.
#   Larger numbers will increase the amount of slope, which
#   results in more curvature in the mesh. Default is .2.

[mcu]
#serial: /dev/ttyACM0
serial: /dev/serial/by-id/usb-UltiMachine__ultimachine.com__RAMBo_7553531353035171F030-if00
baud: 250000
pin_map: arduino

[mcu auxboard]
#serial: /dev/ttyACM1
serial: /dev/serial/by-id/usb-UltiMachine__ultimachine.com__RAMBo_755353135303517191C0-if00
baud: 250000
pin_map: arduino

[printer]
kinematics: delta
max_velocity: 400
#max_accel: 2000
max_accel: 2500
minimum_z_position=-15
print_radius: 121.0
#delta_radius: 120.0
#   Radius (in mm) of the horizontal circle formed by the three linear
#   axis towers. This parameter may also be calculated as:
#    delta_radius = smooth_rod_offset - effector_offset - carriage_offset
#   This parameter must be provided.

[endstop_phase]

# The stepper_a section describes the stepper controlling the front
# left tower (at 210 degrees). This section also controls the homing
# parameters (homing_speed, homing_retract_dist) for all towers.
[stepper_a]
step_pin: PC0
dir_pin: PL0
enable_pin: !PA7
step_distance: .01250
#step_distance: .00625
endstop_pin: ^PB6
#endstop_pin: tmc2130_stepper_a:virtual_endstop
homing_speed: 60
homing_retract_dist: 4
#position_endstop: 585
#arm_length: 265
#angle:

[tmc2130 stepper_a]
cs_pin: PG0
microsteps: 16
#microsteps: 32
run_current: .70
sense_resistor: 0.220
diag1_pin: !PK2
driver_SGT: 3

# The stepper_b section describes the stepper controlling the front
# right tower (at 330 degrees).
[stepper_b]
step_pin: PC1
dir_pin: PL1
enable_pin: !PA6
step_distance: .01250
#step_distance: .00625
endstop_pin: ^PB5
#endstop_pin: tmc2130_stepper_b:virtual_endstop

[tmc2130 stepper_b]
cs_pin: PG2
microsteps: 16
#microsteps: 32
run_current: .70
sense_resistor: 0.220
diag1_pin: !PK7
driver_SGT: 3

# The stepper_c section describes the stepper controlling the rear
# tower (at 90 degrees).
[stepper_c]
step_pin: PC2
dir_pin: PL2
enable_pin: !PA5
step_distance: .01250
#step_distance: .00625
endstop_pin: ^PF2
#endstop_pin: tmc2130_stepper_c:virtual_endstop

[tmc2130 stepper_c]
cs_pin: PK5
microsteps: 16
#microsteps: 32
run_current: .70
sense_resistor: 0.220
diag1_pin: !PK6
driver_SGT: 3


[extruder]
step_pin: PC3
#dir_pin: !PL6
dir_pin: PL6
enable_pin: !PA4
# DeltaMaker extruder
step_distance: .01036725
# Bondtech with 3:1 gear
#step_distance: .00246177
nozzle_diameter: 0.5
filament_diameter: 1.750
#pressure_advance: 0.5
#pressure_advance: 0.2
heater_pin: PE5
sensor_type: ATC Semitec 104GT-2
sensor_pin: PF0
control: pid
pid_Kp: 22.45
pid_Ki: 2.90
pid_Kd: 43.41
#min_temp: 10
#NO HOTEND
min_temp: -100
min_extrude_temp: -100
#min_extrude_temp: 170
max_temp: 260

[tmc2130 extruder]
cs_pin: PK4
microsteps: 16
#run_current: .70
run_current: .30
sense_resistor: 0.220
diag1_pin: !PK3

[heater_fan extruder_fan]
pin: PG5
heater: extruder
heater_temp: 50.0
fan_speed: 1.0



[extruder1]
step_pin: auxboard:PC3
dir_pin: auxboard:PL6
enable_pin: !auxboard:PA4
# DeltaMaker extruder
step_distance: .01036725
# Bondtech with 3:1 gear
#step_distance: .00246177
nozzle_diameter: 0.5
filament_diameter: 1.750
heater_pin: auxboard:PE5
sensor_type: ATC Semitec 104GT-2
sensor_pin: auxboard:PF0
#control: pid
#pid_Kp: 22.45
#pid_Ki: 2.90
#pid_Kd: 43.41
#min_temp: 10
#NO HOTEND
min_temp: -100
min_extrude_temp: -100
#min_extrude_temp: 170
max_temp: 260

[tmc2130 extruder1]
cs_pin: auxboard:PK4
microsteps: 16
run_current: .70
sense_resistor: 0.220
diag1_pin: !auxboard:PK3

#[heater_fan extruder1_fan]
#pin: auxboard:PG5
#heater: extruder1
#heater_temp: 50.0
#fan_speed: 1.0


[extruder2]
step_pin: auxboard:PC2
dir_pin: auxboard:PL2
enable_pin: !auxboard:PA5
# DeltaMaker extruder
step_distance: .01036725
# Bondtech with 3:1 gear
#step_distance: .00246177
nozzle_diameter: 0.5
filament_diameter: 1.750
heater_pin: auxboard:PG5
sensor_type: ATC Semitec 104GT-2
sensor_pin: auxboard:PF1
control: pid
pid_Kp: 22.45
pid_Ki: 2.90
pid_Kd: 43.41
#min_temp: 10
#NO HOTEND
min_temp: -100
min_extrude_temp: -100
#min_extrude_temp: 170
max_temp: 260

[tmc2130 extruder2]
cs_pin: auxboard:PK5
microsteps: 16
run_current: .70
sense_resistor: 0.220
diag1_pin: !auxboard:PK6

[filament_switch_sensor filament_sensor]
switch_pin: PF1

[verify_heater extruder]
#NO HOTEND
# disable verify_heater by specifying a large hysteresis value
hysteresis: 500

[heater_bed]
heater_pin: PB4
sensor_type: EPCOS 100K B57560G104F
#sensor_type: NTC 100K beta 3950
#sensor_pin: PF2
sensor_pin: PF3
control: watermark
#min_temp: 10
min_temp: -100
max_temp: 130


# Print cooling fan (omit section if fan not present).
#[fan]
#pin: auxboard:PA10
# 



# Idle timeout. An idle timeout is automatically enabled - add an
# explicit idle_timeout config section to change the default settings.
[idle_timeout]
#gcode:
#   A list of G-Code commands (one per line; subsequent lines
#   indented) to execute on an idle timeout. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
#timeout: 900
#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.

# Enable the "M118" and "RESPOND" extended commands.
[respond]
default_type: echo
#    Sets the default prefix of the "M118" and "RESPOND" output to one of
#    the following:
#        echo: "echo: " (This is the default)
#        command: "// "
#        error: "!! "
# default_prefix: echo:
#    Directly sets the default prefix. If present, this value will override
#    the "default_type".

# Pause/Resume functionality with support of position capture and restore
[pause_resume]
#recover_velocity: 50.

# The delta_calibrate section enables a DELTA_CALIBRATE extended
# g-code command that can calibrate the tower endstop positions and
# angles.
[delta_calibrate]
radius: 100
#   Radius (in mm) of the area that may be probed. This is the radius
#   of nozzle coordinates to be probed; if using an automatic probe
#   with an XY offset then choose a radius small enough so that the
#   probe always fits over the bed. This parameter must be provided.
#speed: 50
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 20
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
#samples: 2
#   The number of times to probe each point.  The probed z-values will
#   be averaged. The default is to probe 1 time.
#sample_retract_dist: 2.0
#   The distance (in mm) to retract between each sample if sampling

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [printer]
#*# delta_radius = 109.809232
#*#
#*# [stepper_a]
#*# angle = 210.667584
#*# arm_length = 265.000000
#*# position_endstop = 587.472528
#*#
#*# [stepper_b]
#*# angle = 330.135126
#*# arm_length = 265.000000
#*# position_endstop = 588.514521
#*#
#*# [stepper_c]
#*# angle = 90.000000
#*# arm_length = 265.000000
#*# position_endstop = 588.029404
#*#
#*# [delta_calibrate]
#*# height0 = 0.0
#*# height0_pos = 47040.000,47040.000,47040.000
#*# height1 = 0.0
#*# height1_pos = 51194.000,51194.000,45140.000
#*# height2 = 0.0
#*# height2_pos = 46857.000,53280.000,46857.000
#*# height3 = 0.0
#*# height3_pos = 45135.000,50473.000,50473.000
#*# height4 = 0.0
#*# height4_pos = 46619.000,46619.000,51326.000
#*# height5 = 0.0
#*# height5_pos = 49927.000,45273.000,49927.000
#*# height6 = 0.0
#*# height6_pos = 52285.000,46757.000,46757.000
#*#
#*# [probe]
#*# z_offset = -0.312
#*#
#*# [save_gcode_offset]
#*# gcode_offset = 0.000, 0.000, -0.550
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.098376, -0.098376, -0.098376, -0.098376, -0.098376
#*# 	-0.098522, -0.098522, -0.041514, 0.158884, 0.158884
#*# 	-0.066983, -0.081111, 0.000000, 0.139406, 0.263870
#*# 	0.064394, 0.064394, -0.010725, 0.096409, 0.096409
#*# 	0.102461, 0.102461, 0.102461, 0.102461, 0.102461
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -100.0047443
#*# max_x = 99.9941936253
#*# min_y = -100.003353152
#*# max_y = 100.000780482
#*#
#*# [extruder1]
#*# control = pid
#*# pid_kp = 26.635
#*# pid_ki = 1.355
#*# pid_kd = 130.844
