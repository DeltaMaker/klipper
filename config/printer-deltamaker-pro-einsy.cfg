#
# Date: 10/6/2020
# DeltaMaker printer config file: printer-deltamaker-pro-einsy.cfg
# DeltaMaker Pro config file for Einsy Rambo board.
#
# Features:
# 1. extruder fan
# 2. power controlled touch probe
# 3. mesh bed leveling using touch probe


# Enable the SAVE_GCODE_OFFSET command
[save_gcode_offset]

[output_pin probe1_power_pin]
pin: PH5
value: 0
shutdown_value: 0

[output_pin probe2_power_pin]
pin: PH3
value: 0
shutdown_value: 0

[gcode_macro PROBE_POWER_ON]
gcode:
   SET_PIN PIN=probe1_power_pin VALUE=1
   SET_PIN PIN=probe2_power_pin VALUE=1
   G4 P100
[gcode_macro PROBE_POWER_OFF]
gcode:
   SET_PIN PIN=probe1_power_pin VALUE=0
   SET_PIN PIN=probe2_power_pin VALUE=0

[probe]
pin: PB4
#x_offset: -16.0
#y_offset: -22.0
#z_offset: -0.2
#speed: 10.0
speed: 4
lift_speed: 10.0
samples: 2
#sample_retract_dist: 2.0
#samples_result: average
samples_tolerance: 0.100
samples_tolerance_retries: 4
activate_gcode:
    PROBE_POWER_ON
deactivate_gcode:
    ; PROBE_POWER_OFF


# Mesh Bed Leveling. One may define a [bed_mesh] config section
# to enable move transformations that offset the z axis based
# on a mesh generated from probed points.
[bed_mesh]
speed: 250
horizontal_move_z: 5
mesh_radius: 200
#round_probe_count: 7
#relative_reference_index: 14
round_probe_count: 5
relative_reference_index: 6
#round_probe_count: 3
#relative_reference_index: 2
#mesh_origin: -8, -11
fade_start: 1.0
fade_end: 10.0
split_delta_z: .025
#   The amount of Z difference (in mm) along a move that will
#   trigger a split. Default is .025.
move_check_distance: 5.0
#   The distance (in mm) along a move to check for split_delta_z.
#   This is also the minimum length that a move can be split. Default
#   is 5.0.
mesh_pps: 2,2
#   A comma separated pair of integers (X,Y) defining the number of
#   points per segment to interpolate in the mesh along each axis. A
#   "segment" can be defined as the space between each probed
#   point. The user may enter a single value which will be applied
#   to both axes.  Default is 2,2.
algorithm: bicubic
#   The interpolation algorithm to use. May be either "lagrange"
#   or "bicubic". This option will not affect 3x3 grids, which
#   are forced to use lagrange sampling.  Default is lagrange.
#bicubic_tension: .2
#   When using the bicubic algorithm the tension parameter above
#   may be applied to change the amount of slope interpolated.
#   Larger numbers will increase the amount of slope, which
#   results in more curvature in the mesh. Default is .2.

[mcu]
serial: /dev/ttyACM0
#serial: /dev/serial/by-id/usb-UltiMachine__ultimachine.com__RAMBo_755353135303517191C0-if00
baud: 250000
pin_map: arduino

[printer]
kinematics: delta
max_velocity: 500
#max_accel: 2000
max_accel: 5000	
minimum_z_position=-10
print_radius: 240.0
#delta_radius: 235.0
#   Radius (in mm) of the horizontal circle formed by the three linear
#   axis towers. This parameter may also be calculated as:
#    delta_radius = smooth_rod_offset - effector_offset - carriage_offset
#   This parameter must be provided.

[endstop_phase]

# The stepper_a section describes the stepper controlling the front
# left tower (at 210 degrees). This section also controls the homing
# parameters (homing_speed, homing_retract_dist) for all towers.
[stepper_a]
step_pin: PC0
dir_pin: PL0
enable_pin: !PA7
step_distance: .01250
#step_distance: .00625
endstop_pin: ^PB6
#endstop_pin: tmc2130_stepper_a:virtual_endstop
homing_speed: 60
homing_retract_dist: 4
#position_endstop: 585
#arm_length: 265
#angle:

[tmc2130 stepper_a]
cs_pin: PG0
microsteps: 16
#microsteps: 32
run_current: .70
sense_resistor: 0.220
diag1_pin: !PK2
driver_SGT: 3

# The stepper_b section describes the stepper controlling the front
# right tower (at 330 degrees).
[stepper_b]
step_pin: PC1
dir_pin: PL1
enable_pin: !PA6
step_distance: .01250
#step_distance: .00625
endstop_pin: ^PB5
#endstop_pin: tmc2130_stepper_b:virtual_endstop

[tmc2130 stepper_b]
cs_pin: PG2
microsteps: 16
#microsteps: 32
run_current: .70
sense_resistor: 0.220
diag1_pin: !PK7
driver_SGT: 3

# The stepper_c section describes the stepper controlling the rear
# tower (at 90 degrees).
[stepper_c]
step_pin: PC2
dir_pin: PL2
enable_pin: !PA5
step_distance: .01250
#step_distance: .00625
endstop_pin: ^PF2
#endstop_pin: tmc2130_stepper_c:virtual_endstop

[tmc2130 stepper_c]
cs_pin: PK5
microsteps: 16
#microsteps: 32
run_current: .70
sense_resistor: 0.220
diag1_pin: !PK6
driver_SGT: 3

[extruder]
step_pin: PC3
#non-standard motor wire
dir_pin: !PL6
#dir_pin: PL6
enable_pin: !PA4
# DeltaMaker extruder
step_distance: .01036725
# Bondtech with 3:1 gear
#step_distance: .00246177
nozzle_diameter: 0.5
filament_diameter: 1.750
#pressure_advance: 0.5
#pressure_advance: 0.2
heater_pin: PE5
sensor_type: ATC Semitec 104GT-2
sensor_pin: PF0
control: pid
pid_Kp: 22.45
pid_Ki: 2.90
pid_Kd: 43.41
#min_temp: 10
#NO HOTEND
min_temp: -100
min_extrude_temp: -100
#min_extrude_temp: 170
max_temp: 260

[tmc2130 extruder]
cs_pin: PK4
microsteps: 16
#run_current: .70
run_current: .50
sense_resistor: 0.220
diag1_pin: !PK3

# Enable firmware retraction
#[firmware_retraction]
#retract_length: 8
#retract_speed: 120
#unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when unretracting.
#unretract_speed: 60

[heater_fan extruder_fan]
pin: PG5
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

[filament_switch_sensor filament_sensor]
switch_pin: PF1

[verify_heater extruder]
#NO HOTEND
# disable verify_heater by specifying a large hysteresis value
hysteresis: 500

# Print cooling fan (omit section if fan not present).
#[fan]
#pin: auxboard:PA10
# 

# Idle timeout. An idle timeout is automatically enabled - add an
# explicit idle_timeout config section to change the default settings.
[idle_timeout]
#gcode:
#   A list of G-Code commands (one per line; subsequent lines
#   indented) to execute on an idle timeout. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
#timeout: 900

# Enable the "M118" and "RESPOND" extended commands.
[respond]
default_type: echo
#    Sets the default prefix of the "M118" and "RESPOND" output to one of
#    the following:
#        echo: "echo: " (This is the default)
#        command: "// "
#        error: "!! "
# default_prefix: echo:

# Pause/Resume functionality with support of position capture and restore
[pause_resume]
#recover_velocity: 50.

# The delta_calibrate section enables a DELTA_CALIBRATE extended
# g-code command that can calibrate the tower endstop positions and
# angles.
[delta_calibrate]
radius: 200
#speed: 50
horizontal_move_z: 20
#samples: 2
#sample_retract_dist: 2.0
